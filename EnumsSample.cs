using System;

/* 
    Перечисления, это особая структура похожая
    на класс. Они нужны, для создания некоторых
    уникальных константных значений, простых для восприятия.
*/

namespace EnumsSample
{
    /*
        Предположим игрок может быть 
        пешим или на технике, или на коне,
        или на птеродактиле? Тогда для сохранения
        такого состояния помогут перечисления.
    */
    
    // Объявление 
    // *MountType переводится "ездовой тип"
    enum MountType
    {
        Vehicle,        // Техника
        None,           // Нет
        Horse,          // Лошадь
        Pterodactyl     // Птеродактиль
    }
    
    // Или к примеру нужно перечислить игровые профессии
    enum Profession
    {
        Policeman,
        ShopAssistant,
        Banker
        // Ну и так далее если надо
    }
    
    // В чем же их практическое применение?
    
    class Program
    {
        
        static void Main()
        {
            
            // Можно создать переменную типа созданного перечисления:
            Profession prof;
            // Эта переменная может содержать в себе ТОЛЬКО константу 
            // типа Profession, чтобы понять посмотри далее:
            prof = Profession.Policeman;
            // или
            MountType mnttype = MountType.Vehicle;
            mnttype = MountType.None;
            
            // это все константы, потому что значения этих перечислений
            // невозможно изменить во время выполнения кода, только переписав определение
            
            // уточняя какое их практическое применение, если существует
            // необходимость сохранять например профессию игрока? С помощью
            // перечислений можно избежать разночтений в сохранении такой информации
        }
    }
    
    // Также можно присваивать этим константам любые целые значения:
    
    // enum Имя : какой_целочисленный_тип
    enum SomeEnum : int 
    {
        one = 1,
        two = 2,
        thr = 3
    }
    
    // Теперь если сделать (int) SomeEnum.one то мы получим 1,
    // Как и если сделать (int) SomeEnum.two то мы получим 2
    
}